services:
  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    ports:
      - "8443:8443"
    volumes:
      - ./docker/code:/config
    devices:
      - "/dev/fuse:/dev/fuse"
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - ./docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  n8n:
    image: n8nio/n8n
    container_name: n8n
    ports:
      - "5678:5678"
    volumes:
      - ./docker/n8n:/home/node/.n8n
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=changeme
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - grafana_data:/var/lib/grafana

  cloudflared-grafana:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-grafana
    restart: unless-stopped
    command: ["tunnel", "--no-autoupdate", "run", "--token", "<TUNNEL_TOKEN>"]
    depends_on:
      - grafana
    networks:
      - default

  mktxp:
    image: ghcr.io/akpw/mktxp:latest
    container_name: mktxp
    restart: unless-stopped
    user: root
    volumes:
      - ./docker/mktxp:/root/mktxp/      # contains mktxp.conf
    expose:
      - "49090"                          # only internal; Prometheus scrapes via service name

  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/loki-config.yml
    restart: unless-stopped
    volumes:
      - ./docker/loki/loki-config.yml:/etc/loki/loki-config.yml:ro
      - loki_data:/loki

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    command: -config.file=/etc/promtail/promtail-config.yml
    restart: unless-stopped
    volumes:
      - ./docker/promtail/promtail-config.yml:/etc/promtail/promtail-config.yml:ro
      - ./docker/syslog-ng/logs:/var/log/syslog-ng:ro
    # optional metrics/UI:
    # ports: ["9080:9080"]

  syslog-ng:
    image: balabit/syslog-ng:latest
    container_name: syslog-ng
    restart: unless-stopped
    volumes:
      - ./docker/syslog-ng/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf:ro
      - ./docker/syslog-ng/logs:/var/log/syslog-ng
    ports:
      - "514:514/udp"   # Mikrotik remote logging (RFC3164)
      - "601:601/tcp"

volumes:
  prometheus_data:
  grafana_data:
  loki_data: